global
  log 127.0.0.1 local1 notice
  maxconn 16768
  user haproxy
  group haproxy
  ca-base /etc/ssl
  crt-base /etc/ssl
 
defaults
  log global
  maxconn 16768
  mode http
  # Add x-forwarded-for header.
  option forwardfor
  option http-server-close
  timeout connect 5s
  timeout client 30s
  timeout server 30s
  # Long timeout for WebSocket connections.
  timeout tunnel 1h
 
frontend public
  # HTTP
  bind :80
  # Redirect all HTTP traffic to HTTPS
  #redirect scheme https if !{ ssl_fc }
 
  # HTTPS
  # Example with CA certificate bundle
  # bind :443 ssl crt cert.pem ca-file bundle.crt
  # Example without CA certification bunch
  #bind :443 ssl crt snakeoil.pem
 
  # The node backends - websockets will be managed automatically, given the
  # right base paths to send them to the right Node.js backend.
  #
  # If you wanted to specifically send websocket traffic somewhere different
  # you'd use an ACL like { hdr(Upgrade) -i WebSocket }. Looking at path works
  # just as well, though - such as { path_beg /socket.io } or similar. Adjust your
  # rules to suite your specific setup.
  #use_backend node if { path_beg /served/by/node/ }
  # Everything else to Nginx.
  #default_backend nginx
  #acl is_websocket hdr(Upgrade) -i WebSocket
  #use_backend node if is_websocket
  default_backend metfamily

backend metfamily
  # Tell the backend that this is a secure connection,
  # even though it's getting plain HTTP.
  #reqadd X-Forwarded-Proto: https
 
  balance leastconn
  # Check by hitting a page intended for this use.
  #option httpchk GET /isrunning
  #timeout check 500ms
  # Wait 500ms between checks.
  #hash-type consistent
  #cookie JSESSIONID prefix nocache
  cookie SRVSTICKY insert indirect nocache
  server metfamily0 metfamily0:3838 check cookie metfamily0
  server metfamily1 metfamily1:3838 check cookie metfamily1
  server metfamily2 metfamily2:3838 check cookie metfamily2
  server metfamily3 metfamily3:3838 check cookie metfamily3
  server metfamily4 metfamily4:3838 check cookie metfamily4
  server metfamily5 metfamily5:3838 check cookie metfamily5
  server metfamily6 metfamily6:3838 check cookie metfamily6
  server metfamily7 metfamily7:3838 check cookie metfamily7
  server metfamily8 metfamily8:3838 check cookie metfamily8
  server metfamily9 metfamily9:3838 check cookie metfamily9

# For displaying HAProxy statistics.
frontend stats
  # HTTPS only.
  # Example with CA certificate bundle
  # bind :1936 ssl crt cert.pem ca-file bundle.crt
  # Example without CA certification bunch
  bind :70
  #ssl crt cert.pem
  default_backend stats
 
backend stats
  stats enable
  stats hide-version
  stats realm Haproxy Statistics
  stats uri /
  #stats auth admin:password

